This is a highly simplified example.  A production-ready system would require significantly more code to handle authentication, authorization, error handling, robust data validation, database schema design,  extensive testing, logging,  and  deployment infrastructure (Dockerfiles, CI/CD pipeline configuration, etc.).  You'll also need to replace placeholders like  `/performance_data` with actual API endpoints and add components for user authentication, data visualization, and alerting.  Consider using a more advanced frontend framework like React or Vue.js for a better user experience.  Remember to incorporate comprehensive testing at each stage of development.