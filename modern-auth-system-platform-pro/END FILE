This is a very basic example. A production-ready system would require significantly more code for features like:

* **Robust error handling:**  More sophisticated error handling and logging.
* **Input validation:**  Prevent SQL injection and other vulnerabilities.
* **Authorization:** Implementing roles and permissions.
* **Token refresh:**  Allowing users to stay logged in for extended periods.
* **Password reset:**  A secure password reset mechanism.
* **Frontend routing and state management:**  Using a router and state management library like React Router and Redux or Zustand.
* **Testing:**  Extensive unit, integration, and end-to-end tests.
* **Deployment:**  Setting up a proper CI/CD pipeline.


Remember to replace placeholders like `process.env.JWT_SECRET` and `env("DATABASE_URL")` with your actual values.  This example omits crucial security considerations and is intended only as a starting point.  Thoroughly research security best practices before deploying any authentication system.  You will need to add Dockerfile, .dockerignore,  and CI/CD pipeline configuration files (e.g., for GitHub Actions or GitLab CI) which are beyond the scope of this response.  Remember to install all necessary dependencies using `npm install` in both the backend and frontend directories.