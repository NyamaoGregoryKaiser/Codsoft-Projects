import os
from flask import Flask, request, jsonify
from flask_sqlalchemy import SQLAlchemy
from dotenv import load_dotenv
from werkzeug.security import generate_password_hash, check_password_hash

load_dotenv()

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = os.getenv('DATABASE_URL')
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(80), unique=True, nullable=False)
    password = db.Column(db.String(120), nullable=False)

class Payment(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)
    amount = db.Column(db.Float, nullable=False)
    # Add other payment details like transaction ID, status, etc.

# ... (API routes for user registration, login, payment creation, etc.  See below for examples)

@app.route('/register', methods=['POST'])
def register():
    # ... (Handle user registration, hashing password, etc.)

@app.route('/login', methods=['POST'])
def login():
    # ... (Handle user login and authentication)

@app.route('/payments', methods=['POST'])
def create_payment():
    # ... (Handle payment creation - **SIMULATED** in this example)
    data = request.get_json()
    new_payment = Payment(user_id=1, amount=data['amount']) # Replace with actual user ID and security
    db.session.add(new_payment)
    db.session.commit()
    return jsonify({'message': 'Payment created'}), 201

if __name__ == '__main__':
    db.create_all()
    app.run(debug=True)