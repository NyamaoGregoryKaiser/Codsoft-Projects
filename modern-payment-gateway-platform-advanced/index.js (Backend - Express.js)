```javascript
const express = require('express');
const bodyParser = require('body-parser');
const jwt = require('jsonwebtoken');
const bcrypt = require('bcrypt');
const { Pool } = require('pg');

const app = express();
app.use(bodyParser.json());

// Database Configuration (REPLACE with your credentials)
const pool = new Pool({
  user: 'your_db_user',
  host: 'your_db_host',
  database: 'your_db_name',
  password: 'your_db_password',
  port: 5432,
});


// Simplified Authentication (REPLACE with robust authentication)
app.post('/login', async (req, res) => {
  const { username, password } = req.body;
  try {
    const result = await pool.query('SELECT * FROM users WHERE username = $1', [username]);
    if (result.rows.length === 0) {
      return res.status(401).json({ message: 'Invalid credentials' });
    }
    const user = result.rows[0];
    const passwordMatch = await bcrypt.compare(password, user.password);
    if (!passwordMatch) {
      return res.status(401).json({ message: 'Invalid credentials' });
    }
    const token = jwt.sign({ userId: user.id }, 'your-secret-key'); //REPLACE with strong secret
    res.json({ token });
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: 'Server error' });
  }
});


//Example API endpoint (Requires authorization and significant expansion)
app.post('/payments', async (req, res) => {
  // ... Authentication and validation ...
  try{
    // ... Database interaction to process payment ...
    res.status(201).json({message:"Payment received"});
  } catch(error) {
    res.status(500).json({message: "Payment failed"});
  }
});

app.listen(3000, () => console.log('Server listening on port 3000'));
```